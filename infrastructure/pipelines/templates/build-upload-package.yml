parameters:
  - name: projectDirectory
    type: string
  - name: projectFile
    type: string
  - name: dotnetVersion
    type: string
    default: '8.x'
  - name: hasTests
    type: boolean
    default: true

jobs:
  - job: BuildAndPack
    displayName: "Build and Pack Library + Tests"
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET SDK'
        inputs:
          version: ${{ parameters.dotnetVersion }}

      - task: NuGetAuthenticate@1

      - task: DotNetCoreCLI@2
        displayName: 'Restore all projects'
        inputs:
          command: 'restore'
          projects: '${{ parameters.projectDirectory }}/**/*.csproj'

      - ${{ if eq(parameters.hasTests, true) }}:
        - task: DotNetCoreCLI@2
          displayName: 'Build all tests'
          inputs:
            command: 'build'
            projects: '${{ parameters.projectDirectory }}/Tests/**/*Tests.csproj'
            arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/test'

      - task: DotNetCoreCLI@2
        displayName: 'Build project'
        inputs:
          command: 'build'
          projects: ${{ parameters.projectFile }}
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/lib'

      - task: DotNetCoreCLI@2
        displayName: 'Pack the library into a NuGet package'
        inputs:
          command: 'pack'
          packagesToPack: ${{ parameters.projectFile }}
          versioningScheme: byBuildNumber
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/lib'

      - publish: '$(Build.ArtifactStagingDirectory)/lib'
        artifact: lib

      - publish: '$(Build.ArtifactStagingDirectory)/test'
        artifact: test